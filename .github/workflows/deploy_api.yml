name: Build and Deploy API to AWS Lambda

on:
  push:
    branches:
      - main
      - development 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: cd APILambda && npm ci && npm link TiFBackendUtils

      - name: Build the project
        run: cd APILambda && npm run build

      - name: Remove dev dependencies
        run: cd APILambda && cd dist && npm prune --production

      - name: Zip the project
        run: |
          cd APILambda
          shopt -s extglob
          cp -R !(test|.github|dist|*.ts) dist/
          cd dist
          zip -r ../dist.zip .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to AWS Lambda
        run: |
          aws lambda update-function-code --function-name lambdaSQLRoute --zip-file fileb://APILambda/dist.zip
          aws apigateway put-rest-api --rest-api-id 623qsegfb9 --mode merge --parameters basepath=prepend --body fileb://APILambda/swagger.json
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            stageName="prod"
          else
            stageName="dev"
          fi
          aws apigateway create-deployment --rest-api-id 623qsegfb9 --stage-name $stageName --description 'Deployed'
